@model List<PantryManagementSystem.Models.DTO.PantryItemReadDTO>
@using System

<div class="container container-custom my-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Pantry Items</h2>
        <a asp-action="Create" class="btn btn-primary">Add New Item</a>
    </div>

    <div class="row row-cols-1 row-cols-md-3 g-4">
        @foreach (var item in Model)
        {
            var daysLeft = (item.ExpiryDate - DateTime.Now).TotalDays;
            bool lowStock = item.Quantity <= 5;
            bool expirySoon = daysLeft <= 10;

            <div class="col">
                <div class="card card-custom h-100 shadow-sm position-relative">
                    <!-- Quantity Badge -->
                    <span class="position-absolute top-0 end-0 badge rounded-pill m-2 @(item.Quantity > 0 ? "bg-success" : "bg-danger")">
                        @item.Quantity
                    </span>

                    <!-- Category Badge -->
                    <span class="position-absolute top-0 start-0 badge rounded-pill m-2"
                          style="background: linear-gradient(135deg, #ff6a00, #ee0979); color:white;">
                        @item.Category
                    </span>

                    <div class="card-body">
                        <h5 class="card-title mt-4">@item.Name</h5>
                        <p class="card-text"><strong>Price:</strong> ₹@item.Price</p>
                        <p class="card-text"><strong>Expiry:</strong> @item.ExpiryDate.ToString("dd MMM yyyy")</p>

                        @* Badges for Low Stock / Expiry Soon *@
                        @if (expirySoon)
                        {
                            <span class="badge badge-warning me-1">Expiry Soon</span>
                        }
                        @if (lowStock)
                        {
                            <span class="badge badge-danger">Low Stock</span>
                        }
                    </div>

                    <div class="card-footer d-flex justify-content-center gap-2">
                        <button type="button" class="btn btn-primary btn-sm rounded-pill px-3"
                                onclick="location.href='@Url.Action("Edit", "PantryItem", new { id = item.Id })'">
                            <i class="fa-solid fa-pencil me-1"></i> Edit
                        </button>

                        @* <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-sm rounded-pill px-3 text-white">
                            <i class="fa-solid fa-eye me-1"></i> View
                        </a> *@

                        <button type="button" class="btn btn-danger btn-sm rounded-pill px-3"
                                data-bs-toggle="modal"
                                data-bs-target="#deleteModal"
                                data-url="@Url.Action("Delete", "PantryItem", new { id = item.Id })">
                            <i class="fa-solid fa-trash me-1"></i> Delete
                        </button>
                    </div>

                </div>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this pantry item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button id="confirmDeleteBtn" type="button" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let deleteUrl = "";

        // When modal shows, get the URL from clicked button
        var deleteModal = document.getElementById('deleteModal');
        deleteModal.addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            deleteUrl = button.getAttribute('data-url');
        });

        // Handle Delete button click inside modal
        document.getElementById('confirmDeleteBtn').addEventListener('click', function () {
            fetch(deleteUrl, {
                method: 'DELETE',
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                }
            })
            .then(response => {
                if (response.ok) {
                    // Close modal
                    var modal = bootstrap.Modal.getInstance(deleteModal);
                    modal.hide();

                    // Remove the card from UI dynamically
                    // Option 1: reload page (simpler)
                    location.reload();

                    // Option 2: remove specific card without reload (optional)
                    // document.querySelector(`[data-url='${deleteUrl}']`).closest('.col').remove();
                } else {
                    alert("Delete failed.");
                }
            });
        });
    </script>
}
